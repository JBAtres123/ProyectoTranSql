@page "/VerReservarcion"
@using Microsoft.EntityFrameworkCore
@using ProyectoTranSql.Models
@inject ProyectoTranSql.Data.MyDbContext DbContext
@inject NavigationManager NavigationManager

<link href="css/StyleVerReservacion.css" rel="stylesheet" />

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <!-- Botón "Inicio" en la parte superior izquierda -->
        <button class="btn btn-primary btn-circle" @onclick="IrInicio">Inicio</button>
        <h3>Listado de Solicitudes de Reservación</h3>
    </div>

    @if (solicitudes == null)
    {
        <div class="alert alert-info">Cargando datos...</div>
    }
    else if (!solicitudes.Any())
    {
        <div class="alert alert-warning">No se encontraron solicitudes.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Solicitud ID</th>
                        <th>Motivo</th>
                        <th>Fecha Solicitud</th>
                        <th>Colaborador</th>
                        <th>Departamento</th>
                        <th>Estado de Solicitud</th>
                        <th>Destino</th>
                        <th>Piloto</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var solicitud in solicitudes)
                    {
                        <tr>
                            <td>@solicitud.SolicitudID</td>
                            <td>@solicitud.Motivo</td>
                            <td>@solicitud.FechaSolicitud.ToShortDateString()</td>
                            <td>@solicitud.Colaboradores?.Nombre</td>
                            <td>@solicitud.Departamentos?.Nombre</td>
                            <td>@solicitud.EstadosSolicitud?.SolicitudEstado</td>
                            <td>@solicitud.Destino?.NombreDestino</td>
                            <td>@solicitud.Piloto?.NombrePiloto</td>
                            <td>
                                <div class="d-flex justify-content-between">
                                    <button class="btn btn-success btn-sm me-1" @onclick="() => AprobarSolicitud(solicitud.SolicitudID)">Aprobar</button>
                                    <button class="btn btn-danger btn-sm me-1" @onclick="() => RechazarSolicitud(solicitud.SolicitudID)">Rechazar</button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<SolicitudReservacion> solicitudes;

    protected override async Task OnInitializedAsync()
    {
        // Cargar las entidades relacionadas con Include
        solicitudes = await DbContext.SolicitudReservacion
            .Include(s => s.Colaboradores)
            .Include(s => s.Departamentos)
            .Include(s => s.EstadosSolicitud)
            .Include(s => s.Destino)
            .Include(s => s.Piloto)
            .ToListAsync();
    }

    private async Task AprobarSolicitud(int solicitudId)
    {
        await CambiarEstado(solicitudId, 1); // Estado Aprobado
        NavigationManager.NavigateTo($"/AprobarSolicitud/{solicitudId}");
    }

    private async Task RechazarSolicitud(int solicitudId)
    {
        await CambiarEstado(solicitudId, 2); // Estado Rechazado
        NavigationManager.NavigateTo($"/RechazarSolicitud/{solicitudId}");
    }

    private async Task CambiarEstado(int solicitudId, int nuevoEstado)
    {
        // Buscar la solicitud en la base de datos
        var solicitud = await DbContext.SolicitudReservacion.FindAsync(solicitudId);

        if (solicitud != null)
        {
            // Cambiar el estado de la solicitud
            solicitud.EstadoSolicitudID = nuevoEstado;

            // Guardar los cambios en la base de datos
            await DbContext.SaveChangesAsync();

            // Recargar las solicitudes para reflejar el cambio
            solicitudes = await DbContext.SolicitudReservacion
                .Include(s => s.Colaboradores)
                .Include(s => s.Departamentos)
                .Include(s => s.EstadosSolicitud)
                .Include(s => s.Destino)
                .Include(s => s.Piloto)
                .ToListAsync();
        }
    }

    // Método para redirigir a la página de inicio
    private void IrInicio()
    {
        NavigationManager.NavigateTo("/LogisticaTrans"); // Cambia "/Inicio" a la ruta deseada
    }
}
