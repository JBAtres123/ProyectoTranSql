@page "/AsignarVehiculo/{vehiculoId:int}/{solicitudId:int}"
@using ProyectoTranSql.Models
@using Microsoft.EntityFrameworkCore
@inject ProyectoTranSql.Data.MyDbContext DbContext
@inject NavigationManager NavigationManager

<h3>Formulario de Asignación de Vehículo</h3>

@if (vehiculo == null || solicitud == null)
{
    <p><em>Cargando detalles...</em></p>
}
else
{
    <EditForm Model="@asignacion" OnValidSubmit="GuardarAsignacion">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <h4>Información del Vehículo</h4>
            <p><strong>Marca:</strong> @vehiculo.ModeloVehiculo.MarcaVehiculo.Marca</p>
            <p><strong>Modelo:</strong> @vehiculo.ModeloVehiculo.Modelo</p>
            <p><strong>Placa:</strong> @vehiculo.Placa</p>

            <h4>Información del Colaborador</h4>
            <p><strong>Nombre del Colaborador:</strong> @solicitud.Colaboradores?.Nombre</p>

            <h4>Información de la Asignación</h4>
            <div>
                <label for="fechaAsignacion">Fecha de Asignación:</label>
                <InputDate id="fechaAsignacion" @bind-Value="asignacion.FechaAsignacion" />
            </div>

            <button type="submit">Asignar Vehículo</button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int vehiculoId { get; set; }
    [Parameter] public int solicitudId { get; set; }
    private Vehiculo vehiculo;
    private SolicitudReservacion solicitud;
    private AsignacionVehiculo asignacion = new AsignacionVehiculo();

    protected override async Task OnInitializedAsync()
    {
        await LoadVehiculo();
        await LoadSolicitud();
        PrepararFormulario();
    }

    private async Task LoadVehiculo()
    {
        vehiculo = await DbContext.Vehiculos
            .Include(v => v.ModeloVehiculo)
            .Include(v => v.ModeloVehiculo.MarcaVehiculo)
            .FirstOrDefaultAsync(v => v.VehiculoID == vehiculoId);
    }

    private async Task LoadSolicitud()
    {
        solicitud = await DbContext.SolicitudReservacion
            .Include(s => s.Colaboradores)
            .FirstOrDefaultAsync(s => s.SolicitudID == solicitudId);
    }

    private void PrepararFormulario()
    {
        // Llenar automáticamente los datos de la asignación
        asignacion.VehiculoID = vehiculo.VehiculoID;
        asignacion.ColaboradorID = solicitud.ColaboradorID; // Tomado de la solicitud
        asignacion.FechaAsignacion = DateTime.Now; // Asignar fecha actual por defecto
    }

    private async Task GuardarAsignacion()
    {
        DbContext.AsignacionVehiculo.Add(asignacion);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/ConfirmacionAsignacion");
    }
}
