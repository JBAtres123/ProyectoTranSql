@page "/VehiculosListAsignacion"
@using Microsoft.EntityFrameworkCore
@using ProyectoTranSql.Models
@inject ProyectoTranSql.Data.MyDbContext DbContext
@inject NavigationManager NavigationManager

<head>
    <link href="css/StyleVehiculosList.css" rel="stylesheet" />
</head>

<h3>Lista de Vehículos Disponibles</h3>

@if (vehiculos != null && vehiculos.Any())
{
    <table class="vehiculos-table">
        <thead>
            <tr>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Año</th>
                <th>Placa</th>
                <th>Tipo de Vehículo</th>
                <th>Capacidad</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehiculo in vehiculos)
            {
                <tr>
                    <td>@vehiculo.ModeloVehiculo.MarcaVehiculo.Marca</td>
                    <td>@vehiculo.ModeloVehiculo.Modelo</td>
                    <td>@vehiculo.ModeloVehiculo.Año</td>
                    <td>@vehiculo.Placa</td>
                    <td>@vehiculo.TipoVehiculo.Tipo</td>
                    <td>@vehiculo.Capacidad</td>
                    <td>
                        <span class="estado-vehiculo @(GetEstadoCssClass(vehiculo.EstadoVehiculoID))">
                            @vehiculo.EstadoVehiculo?.Estado
                        </span>
                    </td>
                    <td>
                        <select @onchange="(e) => CambiarEstadoVehiculo(vehiculo, e)">
                            <option value="">Cambiar Estado</option>
                            @foreach (var estado in estados)
                            {
                                <option value="@estado.EstadoVehiculoID" selected="@(vehiculo.EstadoVehiculoID == estado.EstadoVehiculoID)">
                                    @estado.Estado
                                </option>
                            }
                        </select>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No hay vehículos disponibles en la base de datos.</p>
}

@code {
    private List<Vehiculo> vehiculos;
    private List<EstadosVehiculo> estados;

    protected override async Task OnInitializedAsync()
    {
        await LoadVehiculos();
        await LoadEstados();
    }

    private async Task LoadVehiculos()
    {
        vehiculos = await DbContext.Vehiculos
            .Include(v => v.ModeloVehiculo)
            .Include(v => v.ModeloVehiculo.MarcaVehiculo)
            .Include(v => v.EstadoVehiculo)
            .Include(v => v.TipoVehiculo)
            .ToListAsync();
    }

    private async Task LoadEstados()
    {
        estados = await DbContext.EstadosVehiculo.ToListAsync();
    }

    private async Task CambiarEstadoVehiculo(Vehiculo vehiculo, ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var nuevoEstadoID))
        {
            vehiculo.EstadoVehiculoID = nuevoEstadoID;

            await DbContext.SaveChangesAsync();

            var nuevoEstado = await DbContext.EstadosVehiculo.FindAsync(nuevoEstadoID);
            if (nuevoEstado != null)
            {
                vehiculo.EstadoVehiculo = nuevoEstado;
            }

            StateHasChanged();
        }
    }

    private string GetEstadoCssClass(int estadoId)
    {
        return estadoId switch
        {
            1 => "estado-verde",  // Disponible
            2 => "estado-gris",   // Reservado
            3 => "estado-azul-claro", // En Ruta
            4 => "estado-rojo",   // Inactivo
            _ => ""
        };
    }
}
